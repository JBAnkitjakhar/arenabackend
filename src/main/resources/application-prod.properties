# src/main/resources/application-prod.properties
# Production Configuration - All values from environment variables ONLY

# MongoDB Atlas Configuration
spring.data.mongodb.uri=${MONGODB_URI}

# ============================================
# KEEP ALIVE CONFIGURATION FOR PRODUCTION
# ============================================
app.render.url=${RENDER_URL:https://arenabackend-5bca.onrender.com}
app.keep-alive.enabled=true

# OAuth2 Configuration - Environment variables only
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://arenabackend-5bca.onrender.com/api/oauth2/callback/{registrationId}

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri=https://arenabackend-5bca.onrender.com/api/oauth2/callback/{registrationId}

# OAuth2 Providers (same as base application.properties)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# JWT Configuration - Environment variable only
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# Cloudinary Configuration - Environment variables only
app.cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
app.cloudinary.api-key=${CLOUDINARY_API_KEY}
app.cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# CORS Configuration - Environment variable
app.cors.allowed-origins=${ALLOWED_ORIGINS}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Piston API Configuration
app.piston.api-url=https://emkc.org/api/v2/piston
app.piston.timeout=30000

# File Upload Configuration
app.file.max-file-size=10MB
app.file.max-request-size=50MB
app.file.images.max-size=2MB
app.file.images.allowed-types=image/jpeg,image/png,image/gif,image/webp
app.file.images.max-per-question=5
app.file.images.max-per-solution=10
app.file.html.max-size=500KB
app.file.html.max-per-solution=2

# Production Logging - Keep keep-alive service visible
logging.level.com.algoarena=INFO
logging.level.com.algoarena.service.KeepAliveService=INFO
logging.level.org.springframework.security=WARN
logging.level.root=WARN

# Production Security
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-exception=false
server.error.include-stacktrace=never