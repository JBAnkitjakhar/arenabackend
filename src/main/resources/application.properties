# # this file override other .env file even so be careful with this file

# # src/main/resources/application.properties
# spring.application.name=AlgoArena-Backend

# # Active Profile - Change to 'prod' for production deployment
# # Options: local, prod
# spring.profiles.active=local
 
# # Server Configuration
# server.port=8080
# server.servlet.context-path=/api

# # MongoDB Configuration - Will be overridden by profile-specific properties
# spring.data.mongodb.uri=mongodb://localhost:27017/algoarena

# # Redis Configuration (from .env)
# spring.data.redis.url=${REDIS_URL:redis://localhost:6379}
# spring.data.redis.timeout=2000ms

# # Cache Configuration - Disable Redis temporarily
# spring.cache.type=simple

# # OAuth2 Configuration - Will be overridden by profile-specific properties
# spring.security.oauth2.client.registration.google.client-id=dummy
# spring.security.oauth2.client.registration.google.client-secret=dummy
# spring.security.oauth2.client.registration.google.scope=email,profile
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

# spring.security.oauth2.client.registration.github.client-id=dummy
# spring.security.oauth2.client.registration.github.client-secret=dummy
# spring.security.oauth2.client.registration.github.scope=user:email,read:user
# spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

# # OAuth2 Providers
# spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
# spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
# spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
# spring.security.oauth2.client.provider.google.user-name-attribute=sub

# spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
# spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
# spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
# spring.security.oauth2.client.provider.github.user-name-attribute=id

# # Custom App Configuration - Will be overridden by profile-specific properties
# app.jwt.secret=mySecretKey123456789012345678901234567890
# app.jwt.expiration=86400000
# app.jwt.refresh-expiration=604800000

# app.cloudinary.cloud-name=dummy
# app.cloudinary.api-key=dummy
# app.cloudinary.api-secret=dummy

# app.piston.api-url=https://emkc.org/api/v2/piston
# app.piston.timeout=30000

# app.file.max-file-size=10MB
# app.file.max-request-size=50MB
# app.file.images.max-size=2MB
# app.file.images.allowed-types=image/jpeg,image/png,image/gif,image/webp
# app.file.images.max-per-question=5
# app.file.images.max-per-solution=10
# app.file.html.max-size=500KB
# app.file.html.max-per-solution=2

# app.cors.allowed-origins=http://localhost:3000
# app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# app.cors.allowed-headers=*
# app.cors.allow-credentials=true

# # Logging Configuration
# logging.level.com.algoarena=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.web=INFO

# # Actuator Configuration
# management.endpoints.web.exposure.include=health,info,metrics
# management.endpoint.health.show-details=when-authorized
# management.endpoint.health.show-components=when-authorized
# management.info.env.enabled=true

# # ===============================
# # JPA CONFIGURATION (Prevents warnings)
# # ===============================
# spring.jpa.open-in-view=false

# # ===============================
# # JACKSON CONFIGURATION
# # ===============================
# spring.jackson.serialization.fail-on-empty-beans=false
# spring.jackson.serialization.write-dates-as-timestamps=false
# spring.jackson.deserialization.fail-on-unknown-properties=false

# # ===============================
# # ERROR HANDLING CONFIGURATION
# # ===============================
# server.error.include-message=always
# server.error.include-binding-errors=always
# server.error.include-exception=false

# # ===============================
# # DEVELOPMENT CONFIGURATION
# # ===============================
# spring.devtools.restart.enabled=true
# spring.devtools.livereload.enabled=true


# src/main/resources/application.properties
spring.application.name=AlgoArena-Backend

# Active Profile - Change to 'prod' for production deployment
spring.profiles.active=local
 
# Server Configuration
server.port=8080
server.servlet.context-path=/api

# MongoDB Configuration - Will be overridden by profile-specific properties
spring.data.mongodb.uri=mongodb://localhost:27017/algoarena

# Redis Configuration - ENABLED for caching
spring.data.redis.url=${REDIS_URL:redis://localhost:6379}
spring.data.redis.timeout=5000ms

# Cache Configuration - ENABLE Redis caching
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# OAuth2 Configuration - Will be overridden by profile-specific properties
spring.security.oauth2.client.registration.google.client-id=dummy
spring.security.oauth2.client.registration.google.client-secret=dummy
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

spring.security.oauth2.client.registration.github.client-id=dummy
spring.security.oauth2.client.registration.github.client-secret=dummy
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

# OAuth2 Providers
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# Custom App Configuration - Will be overridden by profile-specific properties
app.jwt.secret=mySecretKey123456789012345678901234567890
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

app.cloudinary.cloud-name=dummy
app.cloudinary.api-key=dummy
app.cloudinary.api-secret=dummy

app.piston.api-url=https://emkc.org/api/v2/piston
app.piston.timeout=30000

app.file.max-file-size=10MB
app.file.max-request-size=50MB
app.file.images.max-size=2MB
app.file.images.allowed-types=image/jpeg,image/png,image/gif,image/webp
app.file.images.max-per-question=5
app.file.images.max-per-solution=10
app.file.html.max-size=500KB
app.file.html.max-per-solution=2

app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Logging Configuration
logging.level.com.algoarena=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.cache=DEBUG
logging.level.org.springframework.data.redis=DEBUG

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=when-authorized
management.info.env.enabled=true

# JPA CONFIGURATION (Prevents warnings)
spring.jpa.open-in-view=false

# JACKSON CONFIGURATION
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ERROR HANDLING CONFIGURATION
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=false

# DEVELOPMENT CONFIGURATION
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true